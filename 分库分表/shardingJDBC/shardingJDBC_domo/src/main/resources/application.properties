# 配置真实数据源
spring.shardingsphere.datasource.names=ds1,ds0
# 配置第 1 个数据源 对ds1数据库进行具体的配置
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-classname=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://192.168.106.111:3306/db_device_0?serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root

# 配置第 2 个数据源 对ds2数据库进行具体的配置
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-classname=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://192.168.106.112:3306/db_device_1?serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root

# 配置物理表
#spring.shardingsphere.sharding.tables.tb_device.actual-data-nodes=ds$->{0..1}.tb_device_$->{0..1}

# 根据device_id作为分片键
# 配置分库的策略：行模式发呢库策略
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=device_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{device_id%2}
# 标准模式下的分库策略
#spring.shardingsphere.sharding.default-database-strategy.standard.sharding-column=device_id
#spring.shardingsphere.sharding.default-database-strategy.standard.precise-algorithm-class-name=com.wei.shardingJDBC.algorithm.database.MyDatabaseStandardPreciseAlgorithm
#spring.shardingsphere.sharding.default-database-strategy.standard.range-algorithm-class-name=com.wei.shardingJDBC.algorithm.database.MyDatabaseStandardRangeAlgorithm
# 复合分片分库策略
#spring.shardingsphere.sharding.default-database-strategy.complex.sharding-columns=device_id,device_type
#spring.shardingsphere.sharding.default-database-strategy.complex.algorithm-class-name=com.wei.shardingJDBC.algorithm.database.MyDatabaseStandardComplexAlgorithm


# 配置分表策略：根据device_id作为分⽚的依据（分⽚键）
#spring.shardingsphere.sharding.tables.tb_device.table-strategy.inline.sharding-column=device_id
#spring.shardingsphere.sharding.tables.tb_device.table-strategy.inline.algorithm-expression=tb_device_$->{device_id%2}
# 标准分表策略
#spring.shardingsphere.sharding.tables.tb_device.table-strategy.standard.sharding-column=device_id
#spring.shardingsphere.sharding.tables.tb_device.table-strategy.standard.precise-algorithm-class-name=com.wei.shardingJDBC.algorithm.table.MyTableStandardPreciseAlgorithm
#spring.shardingsphere.sharding.tables.tb_device.table-strategy.standard.range-algorithm-class-name=com.wei.shardingJDBC.algorithm.table.MyTableStandardRangeAlgorithm
# 复合分片分表策略
#spring.shardingsphere.sharding.tables.tb_device.table-strategy.complex.sharding-columns=device_id,device_type
#spring.shardingsphere.sharding.tables.tb_device.table-strategy.complex.algorithm-class-name=com.wei.shardingJDBC.algorithm.table.MyTableStandardComplexAlgorithm

#hint策略
#spring.shardingsphere.sharding.tables.tb_device.table-strategy.hint.algorithm-class-name=com.wei.shardingJDBC.algorithm.table.MyTableStandardHintAlgorithm



# tb_device表的分⽚策略
spring.shardingsphere.sharding.tables.tb_device.actual-data-nodes=ds$->{0..1}.tb_device_$->{0..1}
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=device_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{device_id%2}
spring.shardingsphere.sharding.tables.tb_device.table-strategy.inline.sharding-column=device_id
spring.shardingsphere.sharding.tables.tb_device.table-strategy.inline.algorithm-expression=tb_device_$->{device_id%2}


# # tb_device_info表的分⽚策略
spring.shardingsphere.sharding.tables.tb_device_info.actual-data-nodes=ds$->{0..1}.tb_device_info_$->{0..1}
spring.shardingsphere.sharding.tables.tb_device_info.table-strategy.inline.sharding-column=device_id
spring.shardingsphere.sharding.tables.tb_device_info.table-strategy.inline.algorithm-expression=tb_device_info_$->{device_id%2}

# 配置绑定表
spring.shardingsphere.sharding.bindingtables[0]=tb_device,tb_device_info

#⼴播表配置
spring.shardingsphere.sharding.broadcast-tables=tb_device_type
spring.shardingsphere.sharding.tables.t_dict.key-generator.column=type_id
spring.shardingsphere.sharding.tables.t_dict.key-generator.type=SNOWFLAKE

# 开启SQL显示
spring.shardingsphere.props.sql.show=true